[ASSIGNMENT]
                LDA #{2}
                STA {1}

[GOTO]
                JML {1}

[COPY]
                .as
                ; Write the source and destination addresses
                LDA #`{1}
                STA @l SDMA_SRC_ADDY_H
                LDA #`{2}-$B0_0000   ; offset by $B0 for video RAM
                STA @l VDMA_DST_ADDY_H
                LDA #`{3}
                STA @l SDMA_SIZE_H
                STA @l VDMA_SIZE_H
                setal
                LDA #<>{1}
                STA @l SDMA_SRC_ADDY_L
                LDA #<>{2}-$B0_0000   ; offset by $B0 for video RAM
                STA @l VDMA_DST_ADDY_L
                LDA #<>{3}
                STA @l SDMA_SIZE_L
                STA @l VDMA_SIZE_L
                setas

                ; Write size of transfer to local register
                JSL COPY_TO_VRAM

[SCOPY]
                .as
                ; Write the source and destination addresses
                LDA #`{1}
                STA @l SDMA_SRC_ADDY_H
                LDA #`{2}
                STA @l SDMA_DST_ADDY_H
                LDA #`{3}
                STA @l SDMA_SIZE_H
                setal
                LDA #<>{1}
                STA @l SDMA_SRC_ADDY_L
                LDA #<>{2}
                STA @l SDMA_DST_ADDY_L
                LDA #<>{3}
                STA @l SDMA_SIZE_L
                setas

                ; Write size of transfer to local register
                JSL COPY_TO_SRAM

[FILL]
                .as
                ; Write the source and destination addresses
                LDA #`{1}-$B0_0000   ; offset by $B0 for video RAM
                STA @l VDMA_DST_ADDY_H
                LDA #`{2}
                STA @l VDMA_SIZE_H
                LDA #{3}
                STA VDMA_BYTE_2_WRITE

                setal
                LDA #<>{1}-$B0_0000   ; offset by $B0 for video RAM
                STA @l VDMA_DST_ADDY_L
                LDA #<>{2}
                STA @l VDMA_SIZE_L
                setas

                ; Write size of transfer to local register
                JSL FILL_VRAM

[VGM_INIT]
                JSL VGM_INIT_TIMERS
                ; load the game over music
                LDA #`{1}
                STA CURRENT_POSITION + 2
                STA SONG_START + 2
                setal
                LDA #<>{1}
                STA SONG_START
                setas
                JSL VGM_SET_SONG_POINTERS

[VGM_PLAY]
                JSL VGM_WRITE_REGISTER

[ENABLE_IRQS]
                LDA #~({1})
                STA @l INT_MASK_REG0
                LDA #~({2})
                STA @l INT_MASK_REG1
                LDA #~({3})
                STA @l INT_MASK_REG2
                LDA #~({4})
                STA @l INT_MASK_REG3
                CLI