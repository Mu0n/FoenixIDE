using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace FoenixIDE.UI
{
    public enum IrqType
    {
        SOF,
        SOL,
        TIMER0,
        TIMER1,
        TIMER2,
        KEYBOARD,
        MOUSE
    }
    public partial class GameGeneratorForm : Form
    {
        public GameGeneratorForm()
        {
            InitializeComponent();
        }

        private void LoadButton_Click(object sender, EventArgs e)
        {
            OpenFileDialog openDlg = new OpenFileDialog()
            {
                Title = "Pick a Foenix Game File to Open",
                Filter = "FGM (*.fgm)|*.fgm"
            };
            if (openDlg.ShowDialog() == DialogResult.OK)
            {
                FileStream file = File.OpenRead(openDlg.FileName);
                byte[] buffer = new byte[file.Length];
                file.Read(buffer, 0, buffer.Length);
                CodeTextBox.Text = Encoding.ASCII.GetString(buffer);
            }
        }

        private void SaveButton_Click(object sender, EventArgs e)
        {
            SaveFileDialog saveDlg = new SaveFileDialog
            {
                Title = "Pick a Foenix Game File to Save",
                Filter = "FGM (*.fgm)|*.fgm"
            };
            if (saveDlg.ShowDialog() == DialogResult.OK)
            {
                FileStream file = File.Create(saveDlg.FileName);
                byte[] buffer = Encoding.ASCII.GetBytes(CodeTextBox.Text);
                file.Write(buffer, 0, buffer.Length);

            }
        }

        private void CloseButton_Click(object sender, EventArgs e)
        {
            Hide();
        }

        private void GenerateASMButton_ClickAsync(object sender, EventArgs e)
        {
            FolderBrowserDialog saveDlg = new FolderBrowserDialog()
            {
                Description = "Select Destination Folder",
                ShowNewFolderButton = true,
                SelectedPath = Application.StartupPath
            };

            if (saveDlg.ShowDialog() == DialogResult.OK)
            {
                // copy the standard definitions to the output folder

                // parse the code and generate .asm file(s)
                string[] lines =
                {
                    "; *************************************************************************",
                    "; * Assembly generated by Foenix IDE Game Generator",
                    "; *************************************************************************",
                    ".cpu \"65816\"",
                    ".include \"macros_inc.asm\"",
                    ".include \"bank_00_inc.asm\"",
                    ".include \"timer_def.asm\"",
                    ".include \"vicky_ii_def.asm\"",
                    ".include \"interrupt_def.asm\"",
                    ".include \"io_def.asm\"",
                    ".include \"kernel_inc.asm\"",
                    ".include \"math_def.asm\"",
                    ".include \"gabe_control_registers_def.asm\"",
                    ".include \"base.asm\"",
                    "",
                    "* = $000500",
                    ".include \"keyboard_def.asm\"",
                    "* = $10000",
                    ".include \"interrupt_handler.asm\"",
                    "GAME_START",
                    "                setas",
                    "                setxl",
                    "INFINITE_LOOP   NOP",
                    "                BRA INFINITE_LOOP",
                    ""
                };
                string folder = saveDlg.SelectedPath;
                DirectoryInfo dir = new DirectoryInfo(@"Resources\\base_asm");
                foreach (FileInfo fi in dir.GetFiles())
                {
                    fi.CopyTo(folder + "\\" + fi.Name, true);
                }
                // Start writing code
                File.WriteAllLines(folder + "\\game_main.asm", lines);

                WriteInterruptHandler(folder + "\\_sof_handler.asm", IrqType.SOF);
                WriteInterruptHandler(folder + "\\_sol_handler.asm", IrqType.SOL);
                WriteInterruptHandler(folder + "\\_timer0_handler.asm", IrqType.TIMER0);
                WriteInterruptHandler(folder + "\\_timer1_handler.asm", IrqType.TIMER1);
                WriteInterruptHandler(folder + "\\_timer2_handler.asm", IrqType.TIMER2);
                WriteInterruptHandler(folder + "\\_mouse_handler.asm", IrqType.MOUSE);
                WriteInterruptHandler(folder + "\\_keyboard_handler.asm", IrqType.KEYBOARD);
            }
        }

        private void WriteInterruptHandler(string filename, IrqType irq)
        {
            string[] lines = { };
            File.WriteAllLines(filename, lines);
        }

        private void ViewAssetsButton_Click(object sender, EventArgs e)
        {
            // show the asset window
            if (AssetWindow.Instance.Visible)
            {
                AssetWindow.Instance.BringToFront();
            }
            else
            {
                AssetWindow.Instance.Show();
            }
        }

        private void GameGeneratorForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            e.Cancel = true; // this cancels the close event.
            this.Hide();
        }
    }
}
